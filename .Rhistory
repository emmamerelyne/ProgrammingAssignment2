## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
##There are two functions: makeCacheMatrix, makeCache
library(MASS)
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL #initializing inverse as NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function()x #function to get matrix x
setinv <- function(inverse)inv<<-inverse
getinv <- function(){
inver <- ginv(x)
inver%%x #function to obtain inverse of the matrix
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
## Write a short comment describing this function
## This is used to get the cache data
cacheSolve <- function(x, ...) ##gets cache data
{
inv <- x$getinv()
if(!is.null(inv)){ #checking whether inverse is NULL
message("getting catched data!")
return(inv) #returns inverse value
}
data <- x$get()
inv <- solve(data,...) #calculates inverse value
x$setinv(inv)
inv ##return a matrix that is the inverse of 'x'
}
f <- makeCacheMatrix(matrix(1:8,2,4))
f$get()
setwd("/Volumes/Seagate/2022/R Programming_Coursera/WEEK 3")
